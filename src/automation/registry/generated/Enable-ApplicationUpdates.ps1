#! WARNING! This script is auto-generated by Generate.ps1 from the definition ./Enable-ApplicationUpdates.jsonc, do not edit manually.
<#
.SYNOPSIS
	Ensures that the internal auto-update behaviour of these applications is not disabled.

.DESCRIPTION
	This setting ensures that the internal auto-update behaviour of these applications is not disabled.
	This is important for keeping applications up to date with the latest features and security patches.

.OUTPUT
	None
#>

using module ../../../../src\common\Registry.psm1
using module ../../../../src\common\Environment.psm1
using module ../../../../src\common\Ensure.psm1
using module ../../../../src\common\Logging.psm1

[CmdletBinding()]
param()

Invoke-RunMain $PSCmdlet {
    Invoke-EnsureAdministrator;

    $Value = 1;
    $Type = "DWord";
    $Path = "HKLM:\\SOFTWARE\\Policies\\Google\\Update";
    $Key = "Update{8A69D345-D564-463C-AFF1-A69D9E530F96}";
    $CurrentValue = Get-RegistryKey -Path $Path -Key $Key -ErrorAction SilentlyContinue;
    if ($CurrentValue -ne $Value) {
        Invoke-Info "Changing registry value: Path=$Path, Key=$Key, From=$CurrentValue, To=$Value"
        Set-RegistryKey -Path $Path -Key $Key -Value $Value -Kind $Type
    } else {
        Invoke-Info "Registry value already set correctly: Path=$Path, Key=$Key, Value=$Value"
    }
    $Value = 1;
    $Type = "DWord";
    $Path = "HKLM:\\SOFTWARE\\Policies\\Google\\Update";
    $Key = "Update{4DC8B4CA-1BDA-483E-B5FA-D3C12E15B62D}";
    $CurrentValue = Get-RegistryKey -Path $Path -Key $Key -ErrorAction SilentlyContinue;
    if ($CurrentValue -ne $Value) {
        Invoke-Info "Changing registry value: Path=$Path, Key=$Key, From=$CurrentValue, To=$Value"
        Set-RegistryKey -Path $Path -Key $Key -Value $Value -Kind $Type
    } else {
        Invoke-Info "Registry value already set correctly: Path=$Path, Key=$Key, Value=$Value"
    }
    $Value = 1;
    $Type = "DWord";
    $Path = "HKCU:\\SOFTWARE\\Policies\\Google\\Update";
    $Key = "Update{8BA986DA-5100-405E-AA35-86F34A02ACBF}";
    $CurrentValue = Get-RegistryKey -Path $Path -Key $Key -ErrorAction SilentlyContinue;
    if ($CurrentValue -ne $Value) {
        Invoke-Info "Changing registry value: Path=$Path, Key=$Key, From=$CurrentValue, To=$Value"
        Set-RegistryKey -Path $Path -Key $Key -Value $Value -Kind $Type
    } else {
        Invoke-Info "Registry value already set correctly: Path=$Path, Key=$Key, Value=$Value"
    }
    $Value = 1;
    $Type = "DWord";
    $Path = "HKCU:\\SOFTWARE\\Policies\\Google\\Update";
    $Key = "UpdateDefault";
    $CurrentValue = Get-RegistryKey -Path $Path -Key $Key -ErrorAction SilentlyContinue;
    if ($CurrentValue -ne $Value) {
        Invoke-Info "Changing registry value: Path=$Path, Key=$Key, From=$CurrentValue, To=$Value"
        Set-RegistryKey -Path $Path -Key $Key -Value $Value -Kind $Type
    } else {
        Invoke-Info "Registry value already set correctly: Path=$Path, Key=$Key, Value=$Value"
    }
    $Value = 1;
    $Type = "DWord";
    $Path = "HKCU:\\SOFTWARE\\Policies\\Google\\Update";
    $Key = "Update{4DC8B4CA-1BDA-483E-B5FA-D3C12E15B62D}";
    $CurrentValue = Get-RegistryKey -Path $Path -Key $Key -ErrorAction SilentlyContinue;
    if ($CurrentValue -ne $Value) {
        Invoke-Info "Changing registry value: Path=$Path, Key=$Key, From=$CurrentValue, To=$Value"
        Set-RegistryKey -Path $Path -Key $Key -Value $Value -Kind $Type
    } else {
        Invoke-Info "Registry value already set correctly: Path=$Path, Key=$Key, Value=$Value"
    }
    $Value = 1;
    $Type = "DWord";
    $Path = "HKLM:\\SOFTWARE\\Policies\\Zoom\\Zoom Meetings\\General";
    $Key = "EnableClientAutoUpdate";
    $CurrentValue = Get-RegistryKey -Path $Path -Key $Key -ErrorAction SilentlyContinue;
    if ($CurrentValue -ne $Value) {
        Invoke-Info "Changing registry value: Path=$Path, Key=$Key, From=$CurrentValue, To=$Value"
        Set-RegistryKey -Path $Path -Key $Key -Value $Value -Kind $Type
    } else {
        Invoke-Info "Registry value already set correctly: Path=$Path, Key=$Key, Value=$Value"
    }

}

